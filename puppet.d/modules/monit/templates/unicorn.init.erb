#!/bin/sh
# unicorn init scripts
#
# https://gist.github.com/shapeshed/1221753
#

set -e

TIMEOUT=${TIMEOUT-60}
export PATH=<%= @sh_path %>
RAILS_ROOT=<%= @rails_root %>
PID=<%= @unicorn_pid %>
CMD=<%= @cmd %>
APPUSER=<%= @appuser %>

action="$1"
set -u

old_pid="$PID.oldbin"

cd $RAILS_ROOT || exit 1
 
sig () {
  test -s "$PID" && kill -$1 `cat $PID`
}
 
oldsig () {
  test -s $old_pid && kill -$1 `cat $old_pid`
}
 
case $action in
start)
  sig 0 && echo >&2 "Already running" && exit 0
  su - $APPUSER -c  "$CMD"
  ;;
stop)
  sig QUIT && exit 0
  echo >&2 "Not running"
  ;;
force-stop)
  sig TERM && exit 0
  echo >&2 "Not running"
  ;;
restart|reload)
  sig HUP && echo reloaded OK && exit 0
  echo >&2 "Couldn't reload, starting '$CMD' instead"
  su - $APPUSER -c  "$CMD"
  ;;
upgrade)
  if sig USR2 && sleep 20 && sig 0 && oldsig QUIT
  then
    n=$TIMEOUT
    while test -s $old_pid && test $n -ge 0
    do
      printf '.' && sleep 1 && n=$(( $n - 1 ))
    done
    echo
 
    if test $n -lt 0 && test -s $old_pid
    then
      echo >&2 "$old_pid still exists after $TIMEOUT seconds"
      exit 1
    fi
    exit 0
  fi
  echo >&2 "Couldn't upgrade, starting '$CMD' instead"
  su - $APPUSER -c  "$CMD"
  ;;
kill_worker)
  workersig QUIT $2 && exit 0
  echo >&2 "Worker not running"
  ;;
 
reopen-logs)
  sig USR1
  ;;
*)
  echo >&2 "Usage: $0 <start|stop|restart|upgrade|force-stop|reopen-logs>"
  exit 1
  ;;
esac
